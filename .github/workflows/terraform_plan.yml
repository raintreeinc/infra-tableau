on:
  pull_request:
    types:
      - opened

jobs:
  terraform:
    name: Terraform
    environment:
      name: DEV
    env:
      create: true
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v1

    - name: 'Create Terraform Plan Artifact for Apply'
      run: |
        export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
        export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        terraform init -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -backend-config="bucket=${{ secrets.BUCKET }}" \
          -backend-config="key=${{ secrets.KEY }}" \
          -backend-config="dynamodb_table=${{ secrets.DYNAMODB_TABLE }}" \
          -backend-config="region=${{ secrets.AWS_REGION }}"
        terraform plan -var "enabled=${{ env.create }}" \
          -var "aws_region=${{ secrets.AWS_REGION }}" \
          -var "aws_region_code=${{ secrets.AWS_REGION_CODE }}" \
          -var "aws_replica_region=${{ secrets.AWS_REPLICA_REGION }}" \
          -var "aws_replica_region_code=${{ secrets.AWS_REPLICA_REGION_CODE }}" \
          -var "aws_team=${{ secrets.AWS_TEAM }}" \
          -var "tag_automation=${{ secrets.TAG_AUTOMATION }}" \
          -var "tag_env=${{ secrets.TAG_ENV }}" \
          -var "tag_framework=${{ secrets.TAG_FRAMEWORK }}" \
          -var "tag_owner=${{ secrets.TAG_OWNER }}" \
          -var "tag_prefix=${{ secrets.TAG_PREFIX }}" \
          -var "tag_support_group=${{ secrets.TAG_SUPPORT_GROUP }}" \
          -var "tableau_username=${{ secrets.TABLEAUSERVERADMINUSER }}" \
          -var "tableau_password=${{ secrets.TABLEAUSERVERADMINPASSWORD }}" \
          -var "tsm_username=${{ secrets.TSMUSERNAME }}" \
          -var "tsm_password=${{ secrets.TSMPASSWORD }}" \
          -out src/tfplan

    - name: 'Create json file to setup Tableau'
      run: |
        JSON_STRING=$( jq -n \
                  --arg fn "${{ secrets.REGFIRSTNAME }}" \
                  --arg ln ${{ secrets.REGLASTNAME }} \
                  --arg em "${{ secrets.REGEMAIL }}" \
                  --arg co "${{ secrets.REGCOMPANY }}" \
                  --arg ti "${{ secrets.REGTITLE }}" \
                  --arg de "${{ secrets.REGDEPARTMENT }}" \
                  --arg in "${{ secrets.REGINDUSTRY }}" \
                  --arg ph "${{ secrets.REGPHONE }}" \
                  --arg ci "${{ secrets.REGCITY }}" \
                  --arg st "${{ secrets.REGSTATE }}" \
                  --arg zi "${{ secrets.REGZIP }}" \
                  --arg cy "${{ secrets.REGCOUNTRY }}" \
                  --arg em "${{ secrets.REGCOMPANYEMPLOYEES }}"
                  '{zip: $zi, country: $cy, city: $ci, last_name: $ln, industry: $in, eula: yes, title: $ti, company_employees: $em, phone: $ph, company: $co, state: $st, opt_in: false, department: $de, first_name: $fn, email: $em}' ) > src/config.json

    - name: 'Upload Terraform Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: TerraformPlan
        path: src/tfplan
        retention-days: 1

    - name: 'Upload JSON Config File'
      uses: actions/upload-artifact@v3
      with:
        name: JSON
        path: src/config.json
        retention-days: 1        